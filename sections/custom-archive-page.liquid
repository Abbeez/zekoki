{%- style -%}
  .custom-archived__header {
    text-align: center;
  }

  .custom-archived__body {
      display: flex;
      justify-content: center;
      gap: 30px;
      flex-wrap: wrap;
      box-sizing: border-box;
  }

  .custom-archived__items {
      flex: 1 0 100%;
      text-align: center;
      transition: transform 500ms;
  }

  .custom-archived__items:hover {
      transform: translateY(-5px);
  }

  .archived-items__cta{
      background: var(--zekoki-gold);
      flex-grow: 1;
  }

  .custom-archived__items a {
      text-decoration: none;
      color: rgba(var(--color-foreground), 0.75);
  }

  .custom-archived__items_wrapper h2 {
      background: var(--zekoki-primary);
      color: var(--zekoki-white);
      padding: 20px;
      width: 100%;
      margin: 0 !important;
  }

  .pagination {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-top: 20px;
  }

  .pagination button, .pagination span {
      padding: 10px 15px;
      margin: 0 5px;
      border: none;
      background: var(--zekoki-primary);
      color: white;
      cursor: pointer;
      border-radius: 5px;
  }

  .pagination button:disabled {
      background: grey;
      cursor: not-allowed;
  }

  .pagination span {
      background: white;
      color: var(--zekoki-primary);
      cursor: default;
      font-weight: bold;
  }

  /* Tablet and small desktop */
  @media screen and (min-width: 750px) {
      .custom-archived__items {
          flex: 1 0 calc(50% - 30px); /* 2 columns */
          max-width: calc(50% - 30px);
      }
  }

  /* Large desktops */
  @media screen and (min-width: 990px) {
      .custom-archived__items {
          flex: 1 0 calc(33.33% - 30px); /* 3 columns */
          max-width: calc(33.33% - 30px);
      }
  }
{%- endstyle -%}

<section
  class="page-width custom-archived__section scroll-trigger animate--slide-in"
  style="
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
  "
>
  <div class="custom-archived__container">
    <div class="custom-archived__header">
      <div class="custom_archived__header--container">
        <span class="custom_archived_subtitle">{{ section.settings['custom-archived__subtitle'] }}</span>
        <h1 class="h0 title">{{ section.settings['custom-archived__title'] }}</h1>
        <p>{{ section.settings['custom-archived__description'] }}</p>
      </div>
    </div>

    <div
      class="custom-archived__body"
      id="archived-items-container"
      style="
        padding-top: calc({{ section.settings.padding_top }}px - {{ section.settings.padding_top }}px / 2);
        padding-bottom: calc({{ section.settings.padding_bottom }}px - {{ section.settings.padding_bottom }}px / 2);
      "
    >
      {% for archived in shop.metaobjects.product_guides.values %}
        <div class="custom-archived__items archived-item" style="display: none;">
          <a
            href="{{ archived.external_link }}"
            target="_blank"
          >
            <div class="archive-link__container">
              <div class="custom-archived__items_wrapper">
                {% if archived.thumbnail != blank %}
                  <img src="{{ archived.thumbnail | image_url }}" alt="{{ archived.title }}">
                {% endif %}
                <h3>{{ archived.title }}</h3>
              </div>
              <p>{{ archived.description }}</p>
            </div>
          </a>
        </div>
      {% endfor %}
    </div>

    <div class="pagination">
      <button id="prev-page" disabled>Previous</button>
      <span id="page-numbers"></span>
      <button id="next-page">Next</button>
    </div>
  </div>
</section>

{% schema %}
{
  "name": "Custom Branches Section",
  "settings": [
  {
    "type": "header",
    "content": "Section Spacing"
  },
  {
    "type": "range",
    "id": "padding_top",
    "label": "Padding Top",
    "min": 0,
    "max": 100,
    "step": 5,
    "default": 20
  },
  {
    "type": "range",
    "id": "padding_bottom",
    "label": "Padding Bottom",
    "min": 0,
    "max": 100,
    "step": 5,
    "default": 20
  },
  {
    "type": "header",
    "content": "servicecenters Details"
  },
  {
    "type": "text",
    "id": "custom-servicecenters__title",
    "label": "servicecenters Title",
    "default": "Quality Products"
  },
  {
    "type": "textarea",
    "id": "custom-servicecenters__description",
    "label": "servicecenters Description",
    "default": "Product that you will truly love"
  },
  ],
  "presets": [
    {
      "name": "Custom Store Branches Section"
    }
  ]
}
{% endschema %}

<script>
  document.addEventListener("DOMContentLoaded", function () {
    let currentPage = 1;
    const itemsPerPage = 6;
    const items = document.querySelectorAll(".archived-item");
    const totalPages = Math.ceil(items.length / itemsPerPage);
    const prevButton = document.getElementById("prev-page");
    const nextButton = document.getElementById("next-page");
    const pageNumbers = document.getElementById("page-numbers");

    function showPage(page) {
      let start = (page - 1) * itemsPerPage;
      let end = start + itemsPerPage;
      items.forEach((item, index) => {
        item.style.display = index >= start && index < end ? "flex" : "none";
      });

      prevButton.disabled = page === 1;
      nextButton.disabled = page === totalPages;

      pageNumbers.innerHTML = "";
      for (let i = 1; i <= totalPages; i++) {
        let pageSpan = document.createElement("span");
        pageSpan.textContent = i;
        pageSpan.style.padding = "10px 15px";
        pageSpan.style.margin = "0 5px";
        pageSpan.style.cursor = "pointer";
        pageSpan.style.borderRadius = "5px";
        if (i === page) {
          pageSpan.style.background = "var(--zekoki-primary)";
          pageSpan.style.color = "white";
        } else {
          pageSpan.style.background = "white";
          pageSpan.style.color = "var(--zekoki-primary)";
        }
        pageSpan.addEventListener("click", function () {
          currentPage = i;
          showPage(currentPage);
        });
        pageNumbers.appendChild(pageSpan);
      }
    }

    prevButton.addEventListener("click", function () {
      if (currentPage > 1) {
        currentPage--;
        showPage(currentPage);
      }
    });

    nextButton.addEventListener("click", function () {
      if (currentPage < totalPages) {
        currentPage++;
        showPage(currentPage);
      }
    });

    showPage(currentPage);
  });
</script>
