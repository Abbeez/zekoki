{%- style -%}
  .custom-featured__header {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
      align-items: flex-end;
      gap: 20px;
  }

  .custom_featured__body {
    padding-top:30px; padding-bottom:30px;
  }
{%- endstyle -%}

<section class="page-width custom-featured__collection">
  <div class="custom-featured__container">
    <div class="custom-featured__header">
      <div class="custom_featured__header--container">
        <span>{{ section.settings['custom-collection__sub'] }}</span>
        <h2>{{ section.settings['custom-collection__title'] }}</h2>
        <p>{{ section.settings['custom-collection__description'] }}</p>
      </div>
      <div class="custom_featured__header--container">
        <a href="" class="button button--primary" style="background: var(--zekoki-primary);">View All</a>
      </div>
    </div>

    <div class="custom_featured__body">
      {% for product in collections[section.settings['custom-featured__collection']].products limit: 8 %}
        <div class="product-slider">
          <div class="product-card">
            <a href="{{ product.url }}" class="product-image">
              <img
                src="{{ product.featured_image | image_url: width: 250 }}"
                alt="{{ product.title }}"
                width="auto"
                height="auto"
              >
            </a>
          </div>
          <div class="product-info">
            <h3 class="product-title">{{ product.title }}</h3>
            <p class="product-price">
              {% if product.compare_at_price > product.price %}
                <span class="old-price">{{ product.compare_at_price | money }}</span>
              {% endif %}
              <span class="current-price">{{ product.price | money }}</span>
            </p>
            <form method="post" action="/cart/add" class="add-to-cart-form">
              <input type="hidden" name="id" value="{{ product.variants.first.id }}">
              <button type="submit" class="add-to-cart-btn" data-product-id="{{ product.variants.first.id }}">
                Add to Cart
              </button>
            </form>
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
</section>

{% schema %}
{
  "name": "Custom Collection Section",
  "settings": [
    {
      "type": "header",
      "content": "Custom Collection Details"
    },
    {
      "type": "text",
      "id": "custom-collection__sub",
      "label": "Collection Sub Title",
      "default": "Your Subtitle Here"
    },
    {
      "type": "text",
      "id": "custom-collection__title",
      "label": "Collection Title",
      "default": "Your Title Here"
    },
    {
      "type": "textarea",
      "id": "custom-collection__description",
      "label": "Collection Description",
      "default": "Your Details Here"
    },
    {
      "type": "text",
      "id": "custom-collection__viewall",
      "label": "Collection Button Caption",
      "default": "Explore"
    },
    {
      "type": "header",
      "content": "Select Collection"
    },
    {
      "type": "collection",
      "id": "custom-featured__collection",
      "label": "Select Collection"
    }
  ],
  "presets": [
    {
      "name": "Custom Featured Collection"
    }
  ]
}
{% endschema %}

<script>
  document.addEventListener("DOMContentLoaded", function () {
      $('.custom_featured__body').slick({
          slidesToShow: 5,
          slidesToScroll: 1,
          autoplay: true,
          autoplaySpeed: 3000,
          dots: true,
          arrows: true,
          responsive: [
              {
                  breakpoint: 1024,
                  settings: {
                      slidesToShow: 3
                  }
              },
              {
                  breakpoint: 768,
                  settings: {
                      slidesToShow: 2
                  }
              },
              {
                  breakpoint: 480,
                  settings: {
                      slidesToShow: 1
                  }
              }
          ]
      });



    // Add to cart AJAX

   document.querySelectorAll(".add-to-cart-form").forEach((form) => {
        form.addEventListener("submit", function (event) {
            event.preventDefault(); // Prevent page reload

            let formData = new FormData(this);
            let button = this.querySelector(".add-to-cart-btn");

            // Change button text to indicate loading
            button.textContent = "Adding...";
            button.disabled = true;

            fetch("/cart/add.js", {
                method: "POST",
                body: formData,
            })
            .then(response => response.json())
            .then(data => {
                console.log("Product added:", data);

                // Revert button text after adding
                button.textContent = "Added!";
                setTimeout(() => {
                    button.textContent = "Add to Cart";
                    button.disabled = false;
                }, 1500);

                // ✅ TRIGGER DAWN’S CART NOTIFICATION
                window.dispatchEvent(new Event('cart:refresh'));

                // ✅ Optional: Manually refresh the cart count
                updateCartCount();
            })
            .catch(error => {
                console.error("Error adding to cart:", error);
                button.textContent = "Error!";
                setTimeout(() => {
                    button.textContent = "Add to Cart";
                    button.disabled = false;
                }, 1500);
            });
        });
    });

    // ✅ FUNCTION TO UPDATE THE CART COUNT
    function updateCartCount() {
        fetch("/cart.js")
            .then(response => response.json())
            .then(data => {
                let cartCount = data.item_count;
                let cartIcon = document.querySelector(".cart-count");
                if (cartIcon) {
                    cartIcon.textContent = cartCount;
                    cartIcon.style.display = cartCount > 0 ? "inline-block" : "none";
                }
            })
            .catch(error => console.error("Error updating cart count:", error));
    }

  });
</script>
